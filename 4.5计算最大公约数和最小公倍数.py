""" Version:0.1
Author:wang """

# 提示：两个数的最大公约数是两个数的公共因子中最大的那个数；两个数的最小公倍数则是能够同时被两个数整除的最小的那个数。

x=int(input('x='))
y=int(input('y='))

if x>y:
    x,y=y,x
#如果x大于y的值，则交换，把y赋予给x，x赋予给y
#然后从最小的数字开始递减，测试每个数字
for a in range(x,0,-1):
    if x%a==0 and y%a==0:
        print('%d和%d的最大公约数是%d'%(x,y,a))
        print('%d和%d的最小公倍数是%d'%(x,y,x*y//a) )
        break


""" 在数学上，最大公约数有很多种求法，包括质因数分解法、辗转相除法、更相减损法等。
在计算机科学中，常用的求最大公约数的算法有欧几里得算法和扩展欧几里得算法。

欧几里得算法（又称辗转相除法）的基本思想是：
用较大数除以较小数，再用余数去除除数，如此反复，直到余数为零为止。
最后的除数即为这两个数的最大公约数。以下是欧几里得算法的 Python 代码实现：

def gcd(a, b):
    if b == 0:
        return a
    else:
        return gcd(b, a % b) """